// <auto-generated />
using System;
using Hackathon.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hackathon.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210626183537_last_fix")]
    partial class last_fix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hackathon.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "first.department@sibiu_inventory.com",
                            Name = "First Departament"
                        },
                        new
                        {
                            Id = 2,
                            Email = "second.department@sibiu_inventory.com",
                            Name = "Second Departament"
                        },
                        new
                        {
                            Id = 3,
                            Email = "third.department@sibiu_inventory.com",
                            Name = "Third Departament"
                        });
                });

            modelBuilder.Entity("Hackathon.Models.Issues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PinId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PinId");

                    b.HasIndex("StatusId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("Hackathon.Models.PinTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PinTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Housing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Collective Housing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Commercial"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Turism"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Industrial"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Education and Research"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Culture"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Religious"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Infrastructure"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Office Building"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Historical"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Special"
                        });
                });

            modelBuilder.Entity("Hackathon.Models.Pins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GpsCoordX")
                        .HasColumnType("real");

                    b.Property<float>("GpsCoordY")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PinTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PinTypeId");

                    b.ToTable("Pins");
                });

            modelBuilder.Entity("Hackathon.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ongoing"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finished"
                        });
                });

            modelBuilder.Entity("Hackathon.Models.Works", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PinId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PinId");

                    b.HasIndex("StatusId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Hackathon.Models.Issues", b =>
                {
                    b.HasOne("Hackathon.Models.Pins", "Pin")
                        .WithMany("Issues")
                        .HasForeignKey("PinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pin");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Hackathon.Models.Pins", b =>
                {
                    b.HasOne("Hackathon.Models.PinTypes", "PinType")
                        .WithMany()
                        .HasForeignKey("PinTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PinType");
                });

            modelBuilder.Entity("Hackathon.Models.Works", b =>
                {
                    b.HasOne("Hackathon.Models.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.Models.Pins", "Pin")
                        .WithMany("Works")
                        .HasForeignKey("PinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hackathon.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Pin");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Hackathon.Models.Pins", b =>
                {
                    b.Navigation("Issues");

                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
